# This workflow runs integration tests (e.g. demo examples), which requires
# more dependencies


name: Integration tests

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    - cron:  '0 0 * * 4'

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest]
        toolkit: ['pyside2']
        # Dependencies include chaco/enable, whose installation fails
        # on Python 3.8 and 3.9
        python-version: [3.6]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Qt dependencies for Linux
        uses: ./.github/actions/apt-get-qt-deps
        if: startsWith(matrix.os, 'ubuntu')
      - name: Install Swig
        run: sudo apt-get install swig
        if: startsWith(matrix.os, 'ubuntu')
      - name: Install Python packages and dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install .[${{ matrix.toolkit }},test,editors]
          python -m pip install .[examples]
      - name: Run integration tests
        uses: GabrielBB/xvfb-action@v1
        with:
          run: python -m unittest discover -v ${{ github.workspace }}/integrationtests
          working-directory: ${{ runner.temp }}

  notify-on-failure:
    needs: test
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack channel on failure
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: ${{ secrets.ETS_BOTS_SLACK_CHANNEL_ID }}
          status: FAILED
          color: danger
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_ACTION_SECRET }}

  notify-on-success:
    needs: test
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack channel on success
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: ${{ secrets.ETS_BOTS_SLACK_CHANNEL_ID }}
          status: SUCCESS
          color: good
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_ACTION_SECRET }}
